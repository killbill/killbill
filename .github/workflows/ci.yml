name: ci

on:
  - push
  - pull_request
  - workflow_dispatch

env:
  MAVEN_FLAGS: "-e -B --no-transfer-progress"
  MAVEN_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError -Dmaven.wagon.rto=60000 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3"

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version:
          - 8
          - 11
        java-distribution:
          - adopt
          - zulu
        profile:
          - travis
          - mysql
          - postgresql
    steps:
      - name: Checkout killbill
        uses: actions/checkout@v2
        with:
          repository: killbill/killbill
          ref: ${{ github.ref }}
          path: killbill
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.java-distribution }}
          java-version: ${{ matrix.java-version }}
      - name: Configure Sonatype mirror
        uses: s4u/maven-settings-action@v2.4.1
        # Go to Sonatype directly to avoid delay syncs (could get rid of this if actions/setup-java were to support mirrors).
        with:
          mirrors: '[{"id": "oss-releases", "name": "Sonatype releases", "mirrorOf": "central", "url": "https://oss.sonatype.org/content/repositories/releases"}]'
          sonatypeSnapshots: true
          servers: |
            [{
                "id": "sonatype-nexus-snapshots",
                "username": "${OSSRH_USER}",
                "password": "${OSSRH_PASS}"
            }]
      - name: Check if killbill-oss-parent SNAPSHOT must be fetched
        id: killbill-oss-parent
        run: |
          REMOTE_SHA=$(git ls-remote --heads https://github.com/killbill/killbill-oss-parent.git ${GITHUB_REF##*/})
          echo "killbill-oss-parent branch=${GITHUB_REF##*/} sha=${REMOTE_SHA}"
          cd $GITHUB_WORKSPACE/killbill
          # Cannot use mvn help:evaluate unfortunately, as the project isn't buildable yet
          PARENT_POM_VERSION=$(
             awk '
              /<dependenc/{exit}
              /<parent>/{parent++};
              /<version>/{
                if (parent == 1) {
                  sub(/.*<version>/, "");
                  sub(/<.*/, "");
                  parent_version = $0;
                }
              }
              /<\/parent>/{parent--};
              END {
                print parent_version
              }' pom.xml
          )
          echo "killbill-oss-parent version=${PARENT_POM_VERSION}"
          if [[ "$PARENT_POM_VERSION" =~ .*"-SNAPSHOT".* ]] && [ ! -z "$REMOTE_SHA" ]; then
            echo "::set-output name=FETCH_SNAPSHOT::true"
          else
            echo "::set-output name=FETCH_SNAPSHOT::false"
          fi
      - name: Checkout killbill-oss-parent
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        uses: actions/checkout@v2
        with:
          repository: killbill/killbill-oss-parent
          ref: ${{ github.ref }}
          path: killbill-oss-parent
      - name: Build killbill-oss-parent
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        run: |
          cd $GITHUB_WORKSPACE/killbill-oss-parent
          mvn ${MAVEN_FLAGS} clean install -DskipTests=true
      - name: Checkout killbill-commons
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        uses: actions/checkout@v2
        with:
          repository: killbill/killbill-commons
          ref: ${{ github.ref }}
          path: killbill-commons
      - name: Build killbill-commons
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        run: |
          cd $GITHUB_WORKSPACE/killbill-commons
          mvn ${MAVEN_FLAGS} clean install -DskipTests=true
      - name: Checkout killbill-plugin-framework-java
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        uses: actions/checkout@v2
        with:
          repository: killbill/killbill-plugin-framework-java
          ref: ${{ github.ref }}
          path: killbill-plugin-framework-java
      - name: Build killbill-plugin-framework-java
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        run: |
          cd $GITHUB_WORKSPACE/killbill-plugin-framework-java
          mvn ${MAVEN_FLAGS} clean install -DskipTests=true
      - name: Checkout killbill-platform
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        uses: actions/checkout@v2
        with:
          repository: killbill/killbill-platform
          ref: ${{ github.ref }}
          path: killbill-platform
      - name: Build killbill-platform
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        run: |
          cd $GITHUB_WORKSPACE/killbill-platform
          mvn ${MAVEN_FLAGS} clean install -DskipTests=true
      - name: Checkout killbill-client-java
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        uses: actions/checkout@v2
        with:
          repository: killbill/killbill-client-java
          ref: ${{ github.ref }}
          path: killbill-client-java
      - name: Build killbill-client-java
        if: steps.killbill-oss-parent.outputs.FETCH_SNAPSHOT == 'true'
        run: |
          cd $GITHUB_WORKSPACE/killbill-client-java
          mvn ${MAVEN_FLAGS} clean install -DskipTests=true
      - name: Tests
        env:
          MAVEN_PROFILE: ${{ matrix.profile }}
        run: |
          cd $GITHUB_WORKSPACE/killbill
          mvn ${MAVEN_FLAGS} clean install -P${MAVEN_PROFILE}
